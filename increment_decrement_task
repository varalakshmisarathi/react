<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script
      crossorigin
      src="https://unpkg.com/react@16/umd/react.development.js"
    ></script>
    <script
      crossorigin
      src="https://unpkg.com/react-dom@16/umd/react-dom.development.js"
    ></script>
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
  </head>
  <body>
    <div id="div"></div>
    <script type="text/babel">
    const element=document.getElementById("div")
    const Counting1 = (props) => {
       const [num, setNum] = React.useState(0);
       const increment = () => {
         setNum(num + 1);
       };
       const decrement = () => {
         setNum(num - 1);
       };
       return (
          <div>{num}<br/>
            <button onClick={increment}>Increment</button>
            <button onClick={decrement}>Decrement</button>
          </div>
        );
    };
    function CounterApp1(props) 
    {
        const values = props.values;
        return <li>{values}</li>;
    }
      function CounterApp2(props) 
    {
        const final = props.final;
        const list = final.map((num) => (
          <CounterApp1 key={num} values={num} />
        ));
        return <ul>{list}</ul>;
    }
      const CounterApp3 = () => {
        final.push(<Counting1/>);
        ReactDOM.render(<div><CounterApp2 final={final} /><button onClick={CounterApp3}>Add Counter</button></div>,element);
      };
      const final = [<Counting1/>];
      ReactDOM.render(<div><CounterApp2 final={final} /><button onClick={CounterApp3}>Add Counter</button></div>,element);
    </script>
  </body>
</html>
